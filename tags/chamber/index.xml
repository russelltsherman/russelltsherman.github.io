<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>chamber on Russell T Sherman</title>
    <link>https://russelltsherman.github.io/tags/chamber/</link>
    <description>Recent content in chamber on Russell T Sherman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://russelltsherman.github.io/tags/chamber/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Amazon Systems Manager (SSM)</title>
      <link>https://russelltsherman.github.io/glossary/ssm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://russelltsherman.github.io/glossary/ssm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Calling `chamber write` triggers `Error: InvalidKeyId: ... parameter_store_key is not found.`</title>
      <link>https://russelltsherman.github.io/troubleshooting/calling-chamber-write-triggers-error/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://russelltsherman.github.io/troubleshooting/calling-chamber-write-triggers-error/</guid>
      <description>Question Error: InvalidKeyId: Alias arn:aws:kms:us-west-2:671362398325:alias/parameter_store_key is not found. (Service: AWSKMS; Status Code: 400; Error Code: NotFoundException; Request ID: bf9b3240-39f5-11e8-921d-e9dc98bd5b1a) Answer Per the documentation, Chamber expects to find a KMS key with alias parameter_store_key in the account that you are writing/reading secrets.
You can follow the AWS KMS documentation to create your key, and follow this guide to set up your alias.
We recommend using Terraform:
resource &amp;quot;aws_kms_key&amp;quot; &amp;quot;parameter_store&amp;quot; { description = &amp;quot;Parameter store kms master key&amp;quot; deletion_window_in_days = 10 enable_key_rotation = true } resource &amp;quot;aws_kms_alias&amp;quot; &amp;quot;parameter_store_alias&amp;quot; { name = &amp;quot;alias/parameter_store_key&amp;quot; target_key_id = &amp;quot;${aws_kms_key.</description>
    </item>
    
    <item>
      <title>Helmfile</title>
      <link>https://russelltsherman.github.io/tools/helmfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://russelltsherman.github.io/tools/helmfile/</guid>
      <description>We use helmfile to deploy collections of charts as part of geodesic. The helmfile.yaml is a declarative configuration file that makes it easier to deploy and manage a large number of helm charts.
Another way to think about it is like this:
 If helm is responsible for deploying a single application to kubernetes, then helmfile is responsible for deploying multiple applications by calling helm.
 Features  12-Factor Style Configurations - Parameterize all charts using Environment Variables Inline values.</description>
    </item>
    
    <item>
      <title>Key Management Service (KMS)</title>
      <link>https://russelltsherman.github.io/glossary/kms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://russelltsherman.github.io/glossary/kms/</guid>
      <description>AWS Key Management Service is integrated with most other AWS services to help you protect the data you store with these services. AWS Key Management Service is also integrated with AWS CloudTrail to provide you with logs of all key usage to help meet your regulatory and compliance needs.</description>
    </item>
    
  </channel>
</rss>